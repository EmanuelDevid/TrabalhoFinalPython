COMO OS PROGRAMAS DEVEM FUNCIONAR

QUESTÃO 1:
Primeiro, é necessário instanciar a classe 'NumerosComplexos'. Depois, deve-se inicializar um número complexo, onde, há três formas de se fazer isso. A primeira é através da função 'inicializaNumero()' onde devem ser passados como parâmetros as partes real e imaginária, respectivamente. A segunda é através da função 'inicializaReal()' onde deve ser passado como parâmetro apenas a parte real e a parte imaginária é inicializada como nula e, por fim, através da função 'inicializaZero()' onde não devem ser passados parâmetros e tanto a parte real quanto a parte imaginária são inicializadas como nulas. Uma vez inicializado um número complexo, podemos então usar as funções 'soma()', 'subtrai()', 'multiplica()' e 'divide()' para realizar as quatro operações básicas como o número complexo já inicializado, onde, em todas elas, um novo número complexo é criado internamente e o resultado da operação mostrado na tela. Há ainda a função 'éIgual()' que recebe como parâmetros as partes real e imaginária e de um novo número complexo e, então, é verificado se ele é igual ao número complexo já inicializado. Caso seja, a função retorna 'True', caso contrário, retorna 'False'. Por fim, há a função 'imprimeNumero()' que, como o nome sugere, mostra na tela o número complexo em questão.


QUESTÃO 2:
Este programa foi dividido em três partes, a saber, a classe 'Criptografia', a classe 'Descriptografia' e a função 'principal()' responsável por toda operação do código. Basicamente a classes 'Criptografia' e 'Descriptografia' vão criptografar e descriptografar os números, respectivamente. Quando a função 'principal()' é chamada, é perguntado se o usuário deseja criptografar ou descriptografar um número ou, ainda, encerrar o programa, onde, ele deve digitar 1 para criptografar, 2 caso deseje descriptografar ou 0 caso deseje encerrar o programa. Se o usuário digitar 1, a classe 'Cripatografia' é instanciada e o método 'criptografar()' pertencente a classe é utilizado, onde, esse método criptografa e mostra na tela o número criptografado. Analogamente, se o usuário digitar 2, a classe 'Descriptografia' é instanciada e o método 'descriptografar()', pertencente a classe, é utilizado para descriptografar e mostrar na tela o número descriptografado. O programa executará até que seja digitado 0.

QUESTÃO 3:
Este programa está dividido em três partes. A primeira é a classe 'Notas' que, quando instanciada, devem ser passados como parâmetros ID, texto, tags e data de criação de uma nota que posteriormente será gravada em um arquivo chamado 'blocodenotas.txt'. A segunda é a classe 'BlocoDeNotas', responsável por gravar as notas nesse arquivo através da função 'criar_nota()' que cria notas em uma linha com ID, texto, tags e data separados por ';', respectivamente, sendo esses valores recebidos como parâmetros. Esta classe contém ainda as funções 'modificar_nota()' que modifica o texto ou as tags de uma nota de acordo com os parâmetros recebidos, a função 'listar_notas()' que retorna todas as notas gravadas no arquivo 'BlocoDeNotas.txt' e a função 'listar_notas_filtro()' que retorna as notas por ID, texto, tags ou data de criação de acordo com os parâmetros recebidos. Por fim, há a função 'menu()' responsável por inicialiazar a classe 'BlocoeDeNotas' bem como fazer uso de todas as suas funções de acordo com o desejo do usuário. Esta função é bem interativa dando todas as opções diponíveis ao usuário como, por exemplo, criar, modificar e buscar notas ou mesmo encerrar a execução do programa, além de deixar claro os passos que usuário deve seguir para o perfeito funcionamento do código. A partir das entradas do usuário, as devidas funções vão sendo executadas.